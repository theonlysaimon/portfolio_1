// Laba1AAsd.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
#include <iostream>
#include <map>

using std::endl;
using std::cout;
using std::cin;

int main()
{
    setlocale(LC_ALL, "Russian");
    float arr[5];
    cout << "\nВаш массив до получения данных: ";
    /*
    Пункт 2.1
    Перед заполнением массива данными не содержит данных, даже нулей, а только выделенные ячейки памяти
    */
    for (int i = 0; i < 5; ++i)
    {
        cout << arr[i] << " ";
    }
    cout << endl;
    /*
    Выход за пределы массива -858993460
    Пункт 2.2
    */
    for (int i = 0; i < 5; i++)
    {
        cout << "[" << i + 1 << "]" << ": ";
        cin >> arr[i];
    }
    cout << "\nВаш массив: ";
    /*
    Вывод массива пункт 2.3
    */
    for (int i = 0; i < 5; ++i)
    {
        cout << arr[i] << " ";
    }
    cout << endl;
    /*
    Пункт 2.4 создание массива его вывод на экран и присвоение указателя.
    */
    float *sptr = arr;// присваивания указателя пункт 2.4 и 2.5
    cout << "\nВыводим адрес значения массив arr 2.4: ";
    std::cout << &arr << '\n'; // выводим адрес значения переменной arr
    cout << "\nВыводим адрес, который хранит sptr 2.5: ";
    std::cout << sptr << '\n'; // выводим адрес, который хранит sptr
    cout << "\nВыводим содерживое sptr: ";
    /*
    Вывод по пункту 2.4
    У одномерного массива адреса указателя и самого массива совпадают
    */
    for (int i = 0; i < 5; ++i) 
    {
        cout << sptr[i] << " ";
    }
    cout << endl;
    /*
    Пункт 2.6 повторение всех дейсвий с пункта 2.1-2.3 для статистического массива
    */
    const int size = 5;
    static int mas1[size];
    
    for (int i = 0; i < size; i++) 
    {
        cout << "[" << i + 1 << "]" << ": ";
        cin >> mas1[i];
    }

    cout << "\nВаш массив: ";
    for (int i = 0; i < size; ++i) 
    {
        cout << mas1[i] << " ";
    }
    cout << endl;
    int* ghp = mas1;
    cout << "\nВыводим адрес значения массива mas1 2.6: ";
    std::cout << &mas1 << '\n'; // выводим адрес значения переменной arr
    cout << "\nВыводим адрес, который хранит ghp 2.6: ";
    std::cout << ghp << '\n'; // выводим адрес, который хранит ptr
    cout << "\nВыводим содерживое ghp: ";
    /*
    Вывод по пункту 2.6
    У статистического массива адреса указателя и самого массива совпадают
    */
    for (int i = 0; i < size; ++i) 
    {
        cout << ghp[i] << " ";
    }
    cout << endl;
    /*
    Пункт 2.7 повторение тех же действий для динамического массива
    */
    int* p2;
    p2 = new int[size];
    for (int i = 0; i < size; i++) 
    {
        cout << "[" << i + 1 << "]" << ": ";
        cin >> p2[i];
    }
    cout << "\nВаш массив: ";
    for (int i = 0; i < size; ++i) 
    {
        cout << p2[i] << " ";
    }
    cout << endl;
    int* gp2 = p2;
    cout << "\nВыводим адрес значения массива p2 2.7: ";
    std::cout << &p2 << '\n'; // выводим адрес значения массив p2
    cout << "\nВыводим адрес, который хранит gp2 2.7: ";
    std::cout << gp2 << '\n'; // выводим адрес, который хранит gp2
    cout << "\nВыводим содерживое gp2: ";
    /*
    Вывод по пункту 2.7
    У динамических одномерных массивов адреса указателя и самого массива не совпадают
    */
    for (int i = 0; i < size; ++i) {
        cout << gp2[i] << " ";
    }
    cout << endl;
   
    delete [] p2;//удаление динамического массива 2.8
    /*
    Создание динамического массива из пункта 2.8
    */
    const int row = 3, colum = 5; // Высота и ширина матрицы
    unsigned char(*ram1)[colum];
    ram1 = new unsigned char[row][colum]; // Указатель на указатель (для 2-мерного массива)

    for (int i = 0; i < row; ++i) // Выводим на экран строку i
    {
        for (int j = 0; j < colum; ++j)
            cout << ram1[i][j] << " ";
        cout << endl; // Строка завершается символом перехода на новую строку
    }
    /*
    Вывод по пункту 2.8
    До заполнения двумерного массива он содежит значения H
    */
        for (int i = 0; i < row; i++)   //строки массива
        {
            cout << "столбец [" << i + 1 << "]\n"; //подсказка
            for (int j = 0; j < colum; j++)   //столбцы массива
            {
                cout << "строка [" << j + 1 << "]:";  //выводим подсказку
                cin >> ram1[i][j];                //запоминаем введенное значение
                cout << endl;
            }
        }
        
        for (int i = 0; i < row; ++i) // Выводим на экран строку i
        {  
            for (int j = 0; j < colum; ++j)
                cout << ram1[i][j] << " ";
            cout << endl; // Строка завершается символом перехода на новую строку
        }

        delete [] ram1; // удаление двумерного динамического массива
        /*
        Создание трёхмерного массива для пункта 2.9
        */
        const int zindex = 2, yindex = 3, xindex = 5;

        int*** pit = new int** [zindex];

        for (int i = 0; i < zindex; i++) {
            pit[i] = new int* [yindex];

            for (int j = 0; j < yindex; j++) {
                pit[i][j] = new int[xindex];
            }
        }

        for (int z = 0; z < zindex; z++)
            for (int y = 0; y < yindex; y++)
                for (int x = 0; x < xindex; x++)
                    pit[z][y][x] = rand();
        
        for (int z = 0; z < zindex; z++)
            for (int y = 0; y < yindex; y++)
                for (int x = 0; x < xindex; x++)
                    cout << "mas [" << z << "][" << y << "][" << x << "] = " << pit[z][y][x] << "\n";
        cout << endl;

        int ****mp = &pit;
        int*** mm = pit;

        /*
        Вывод элемента трёхмерного массива с помощью индексации
        */
        cout << "2.9 элемент массива [1][1][1] = " << pit[1][1][1]<< endl;//пункт 2.9
        cout<< "2.10 элемент массива [1][1][1] = " << *(*(*(mm + 1) + 1) + 1)<< endl;// пункт 2.10
        system("pause");
        /*
        Создание двухмерного массива для пункта 2.11
        */
        const int row1 = 3, colum1 = 5; // Высота и ширина матрицы
        int (*ram2)[colum1];// Указатель на символьный массив
        ram2 = new int [row1][colum1];
        for (int i = 0; i < row1; i++)//строки массива
        {
            for (int j = 0; j < colum1; j++)//столбцы массива
            {
                ram2[i][j] = rand();//запоминаем введенное значение
            }
        }
        int**p6 = (int**)ram2;
        p6 = (int**)&pit;
        
        cout << "\n2.11 Выводим адрес значения массива mp: ";
        std::cout << &mp << '\n'; // выводим адрес значения массив mp
        cout << "\n2.11 Выводим адрес, который хранит p6: ";
        std::cout << &p6 << '\n'; // выводим адрес, который хранит p6

        system("pause");
        /*
        Вывод элемента массива по указтелю пункт 2.11
        */
        cout << "2.11 элемент массива [0][1][2] = " << *(*(*(mm + 0) + 1) + 2) << endl;
    return 0;
}


