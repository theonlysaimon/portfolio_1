;Program_5
.MODEL SMALL
.Stack 100h
.Data ;Открыть сегмент данных
var_1 DB 11000110b ;определить переменную var_1 размером байт с начальным значением 11000110b
var_2 DW 9FFEh ;определить переменную var_2 размером слово с начальным значением 9FFEh
var_3 DB ? ;определить переменную var_3 размером байт не задавая ее начального значения
var_4 DW ? ;определить переменную var_3 размером слово не задавая ее начального значения
N_1 DD 0FF00FFEEh ;определить переменную N_1 ;размером двойное слово с начальным значением FF00FFEEh
N_2 DD ? ;определить переменную N_2 ;размером двойное слово не ;задавая ее начального значения

String DB "Assembler", "$" ;определить строку символов ;String, каждый символ которой ;имеет размер байт с начальным ;значением Assembler
M1 DB 7, 9, 28, 46, 39, 31, 20, 25 ;определить массив с именем M1 ;состоящий из восьми числовых ;элементов размером байт
M2 DB 12, 15, 7, 25, 31, 38, 20, 63 ;определить массив с именем M1 ;состоящий из восьми числовых ;элементов размером байт
Z1 DW 48, 256, 300, 511, 31, 512 ;определить массив с именем Z1 ;состоящий из шести числовых ;элементов размером слово
Z2 DW 0EEh, 99Fh, 300h, 51AAh ;определить массив с именем Z2 ;состоящий из четырех числовых ;элементов размером слово
SIM DB "QWERTYUIOP"
DB "ЙЦУКЕНГШЩЗ"
DB "POIUYTREWQ" ;создать массив с именем SIM из ;трех строк по 10 символов в каждой

.Code ;Открыть сегмент кодов
Start: 
    mov AX, @Data ;Инициализировать
    mov DS, AX ;сегментный регистр DS
    xor AX, AX ;Очистить регистр AX 

    mov AX, 83AAh ; Непосредственная адресация
    mov var_4, AX ; Прямая адресация к памяти
    xor AX, AX ; Прямая регистровая адресация
    
    mov SI, 0 ; Непосредственная адресация
    mov AX, Z1[SI+2] ; Косвенная регистровая адресация со смещением

    or var_4, AX ; Прямая адресация к памяти
    mov BX, var_4 ; Прямая адресация к памяти
    xor AX, AX ; Прямая регистровая адресация

    lea SI, Z2 ; Прямая адресация к памяти
    mov [SI], BX ; Косвенная регистровая адресация

    lea SI, Z2 ; Прямая адресация к памяти
    mov CX, [SI] ; Косвенная регистровая адресация
    mov AX, [SI+4] ; Косвенная регистровая адресация со смещением

    add AX, CX ; Прямая регистровая адресация

    mov AX, 4C00h ;Завершить программу
    int 21h ;с помощью DOS

    END Start ;Конец исходного модуля.