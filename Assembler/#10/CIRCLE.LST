Turbo Assembler	 Version 2.51	     04/13/22 12:13:08	    Page 1
circle.ASM
CIRCL_2


      1					 ;Программа вычисления координат точек	окружности+
      2					 и вывод их на экран
      3					 ;Входные параметры:
      4					 ; константа для перевода градусы в	радианы x360
      5					 ; число точек на окружности x36
      6					 ; цвет пикселя forcolor
      7					 ; координаты	центра окружности xc и	yc
      8					 ; значения радиусов по осям x и	y rx, ry
      9					 ; строка	с координатами центра окружности xc_yc
     10					 ; Выходные параметры:
     11					 ; координаты	точки на	окружности x и y
     12					 ; угол поворота радиус-вектора для	точки на		    +
     13					 окружности angl
     14	    0000			 .MODEL	SMALL	 ;Модель памяти ближнего типа.
     15	    0000			 .STACK	256	 ;Отвести под	стек 256 байт.
     16					 .486	 ;Используем расширенную систему команд.
     17
     18	    0000			 .DATA	 ;Открыть сегмент	данных.
     19	    0000  43340000		 x360 DD 180.0	 ;Константа перевода градусы–радианы.
     20	    0004  0168			 x36 DW	360	 ;Число точек	на окружности.
     21	    0006  09			 forcolor DB 09h ;Салатовый цвет.
     22	    0007  012C			 xc DW 300	 ;Координаты центра
     23	    0009  00FA			 yc DW 250	 ;окружности.
     24	    000B  00C8			 rx DW 200	 ;Значения радиуса по оси x.
     25	    000D  00C8			 ry DW 200	 ;Значения радиуса по оси y.
     26	    000F  33 30	30 2C 32 35 30+	 xc_yc DB '300,250','$'	 ;Выводимые значения координат.
     27		  24
     28					 ;================= Переменные =========================
     29	    0017  ????			 x DW ?	 ;Координата точки окружности x.
     30	    0019  ????			 y DW ?	 ;Координата точки окружности y.
     31	    001B  0001			 Angl DW 1	 ;Угол поворота радиуса.
     32					 ;----------------------------------------------------------------------------------- ------
     33	    001D			 .CODE	 ;Открыть сегмент	кодов.
     34					 ;================ Вывод пикселя ========================
     35	    0000			 Point PROC	 ;начало процедуры Point
     36					 ;CX – координата X	(столбец), DX – координата Y		    +
     37					 (строка),
     38					 ;AL – цвет пиксела
     39	    0000  60				 pusha ;помещение значения регистров в стек
     40	    0001  8B 0E	0007r			 mov CX, xc	 ;Вычисляем координату
     41	    0005  03 0E	0017r			 add CX, x	 ;x в регистре	CX.
     42	    0009  8B 16	0009r			 mov DX, yc	 ;Вычисляем координату
     43	    000D  2B 16	0019r			 sub DX, y	 ;y в регистре	DX.
     44	    0011  A0 0006r			 mov AL, forcolor	 ;помещение значения forcolor в al
     45	    0014  B7 00				 mov BH, 0	 ;страница 0
     46	    0016  B4 0C				 mov AH, 12	 ;Вывести пиксел
     47	    0018  CD 10				 int 10h ;средствами BIOS.
     48	    001A  61				 popa ;восстанавление из стека значения		    +
     49					 регистров в обратном	порядке
     50	    001B  C3				 ret ;возврат из процедуры
     51	    001C			 Point ENDP	 ;конец процедуры	Point
     52					 ;============ Закрашивание	экрана цветом фона ==============
     53	    001C			 Fon PROC	 ;начало процедуры Fon
     54					 ;CX – координата X	(столбец), DX – координата Y		    +
     55					 (строка),
     56					 ;AL – цвет пиксела
     57	    001C  60				 pusha	 ;помещение значения в стек
Turbo Assembler	 Version 2.51	     04/13/22 12:13:08	    Page 2
circle.ASM
CIRCL_2


     58	    001D  B9 0000			 mov CX, 0	 ; промещение	0 в cx
     59	    0020  BA 0000			 mov DX, 0	 ;промещение 0 в dx
     60	    0023  B0 0E				 mov AL, 0Eh	 ;Цвет фона.
     61	    0025  B7 00				 mov BH, 0	 ;Номер страницы.
     62	    0027  B4 0C			 c_1: mov AH, 12 ;Вывести пиксел
     63	    0029  CD 10				 int 10h ;средствами BIOS.
     64	    002B  41				 inc CX	 ; cx +	1
     65	    002C  81 F9	027F			 cmp CX, 639	 ;сравенение cx с 319
     66	    0030  75 F5				 jne c_1 ;перейти к c_1	если ZF=0
     67	    0032  33 C9				 xor CX, CX	 ;очистка cx
     68	    0034  42				 inc DX	 ;dx + 1
     69	    0035  81 FA	01DF			 cmp DX, 479	 ;сравенение dx с 199
     70	    0039  75 EC				 jne c_1 ;перейти к c_1	если ZF=0
     71	    003B  61				 popa	 ;восстанавление из стека значения		    +
     72					 регистров в обратном	порядке
     73	    003C  C3				 ret		 ;возврат из процедуры
     74	    003D			 Fon ENDP	 ;конец процедуры	Fon
     75					 ;================ Вывод символа ========================
     76	    003D			 Simv PROC	 ;начало процедуры Simv
     77	    003D  60				 pusha	 ;помещение значения в стек
     78	    003E  B4 02				 mov AH, 02	 ;Функция установки курсора.
     79	    0040  B7 00				 mov BH, 0	 ;Номер текущей страницы.
     80	    0042  B2 28				 mov DL, 40	 ;Номер столбца.
     81	    0044  B6 0F				 mov DH, 15	 ;Номер строки.
     82	    0046  CD 10				 int 10h ;Установка курсора.
     83	    0048  BE 000Fr			 lea SI, xc_yc	 ;Загрузить смещение строки в SI.
     84	    004B  B4 0E			 c_2: mov AH, 0Eh	 ;Функция вывода символа.
     85	    004D  B3 89				 mov BL, 89h	 ;Выбор цвета	символов.
     86	    004F  AC				 lodsb	 ;Переслать символ из строки DS:SI в AL.
     87	    0050  3C 24				 cmp AL, '$'	 ;Определить конец строки.
     88	    0052  74 06	90 90			 je exit_pr	 ;Если конец строки достигнут, выход
     89	    0056  CD 10				 int 10h ;средствами BIOS.
     90	    0058  EB F1				 jmp c_2 ;переход к c_2
     91	    005A  61			 exit_pr: popa	 ; восстанавление	из стека	значения	    +
     92					 регистров в обратном	порядке
     93	    005B  C3				 ret	 ;возврат из процедуры
     94	    005C			 Simv ENDP	 ;конец процедуры	Simv
     95					 ;=========== Вывод пикселя	в центр изображения ==========
     96	    005C			 pixel PROC
     97	    005C  60				 pusha	 ;помещение значения регистров в стек
     98	    005D  B4 0C				 mov AH, 12	 ;Вывести пиксел
     99	    005F  B0 00				 mov AL, 00h ;цвет пикселя
    100	    0061  8B 0E	0007r			 mov cx, xc	 ;строка
    101	    0065  8B 16	0009r			 mov dx, yc	 ;колонка
    102	    0069  CD 10				 int 10h ;средствами BIOS.
    103	    006B  61				 popa	 ;восстанавление из стека значения		    +
    104					 регистров в обратном	порядке
    105	    006C  C3				 ret	 ;возврат из процедуры
    106	    006D			 pixel ENDP
    107					 ;=============== Ожидание нажатия клавиши ===============
    108	    006D			 WaitKey PROC ;начало процедуры WaitKey
    109	    006D  60				 pusha	 ;помещение значения в стек
    110	    006E  B4 08				 mov AH, 08h	 ; функция
    111	    0070  CD 21				 int 21h ;эхо
    112	    0072  61				 popa ;восстанавление из стека значения		    +
    113					 регистров в обратном	порядке
    114	    0073  C3				 ret ;возврат из процедуры
Turbo Assembler	 Version 2.51	     04/13/22 12:13:08	    Page 3
circle.ASM
CIRCL_2


    115	    0074			 WaitKey ENDP	 ;конец процедуры	WaitKey
    116					 ;=============== Главная процедура =======================
    117	    0074			 Main PROC	 ;начало процедуры Main
    118					 ;Подготовка данных
    119	    0074  B8 0000s			 mov AX, @DATA	 ;Инициализация
    120	    0077  8E D8				 mov DS, AX	 ;регистра DS.
    121	    0079  B4 00				 mov AH, 0	 ;Установка графического
    122	    007B  B0 12				 mov AL, 12h	 ;режима 320x200x16
    123	    007D  CD 10				 int 10h ;средствами BIOS.
    124	    007F  E8 FF9A			 call Fon	 ;Вызов процедуры	закрашивания фона.
    125	    0082  E8 FFE8			 call WaitKey	 ;Вызов процедуры	задержки.
    126	    0085  8B 0E	0004r			 mov CX, x36	 ;Число шагов	построения окружности.
    127	    0089  9B DB	E3			 finit	 ;Инициализация сопроцессора.
    128	    008C  D9 EB				 fldpi	 ;Загрузка в стек числа pi.
    129	    008E  D9 06	0000r			 fld x360	 ;Загрузка в стек числа 180.
    130	    0092  DE F9				 fdiv	 ;pi/180, результат в	ST(0).
    131	    0094  D9 1E	0000r			 fstp x360	 ;Сохранение в памяти коэффициента
    132									 ;перевода градусов в радианы.
    133					 ;--------------- Вычисление координат точек окружности   +
    134					 ------------------
    135	    0098  D9 06	0000r		 do: fld x360	 ;Коэффициент градус->радиан в стек.
    136	    009C  DF 06	001Br			 fild angl	 ;Очередное значения угла в стек.
    137	    00A0  DE C9				 fmul	 ;Перевод в радианы.
    138	    00A2  D9 FB				 fsincos ;sin(x) -> st(1), cos(x) -> st(0).
    139	    00A4  DF 06	000Br			 fild rx ;Загрузка радиуса по координате x.
    140	    00A8  DE C9				 fmul	 ;Вычисление координаты x=rx*cos(angl).
    141	    00AA  DF 1E	0017r			 fistp x ;Запись ее в память в формате целого
    142								 ;числа с	извлечением из стека.
    143	    00AE  DF 06	000Dr			 fild ry ;Загрузка радиуса по координате y.
    144	    00B2  DE C9				 fmul	 ;Вычисление координаты y=ry*sin(angl).
    145	    00B4  DF 1E	0019r			 fistp y ;Запись ее в память в формате целого
    146								 ;числа с	извлечением из стека.
    147	    00B8  9B				 fwait	 ;Ожидание завершения	работы			    +
    148					 сопроцессора.
    149	    00B9  E8 FF44			 call Point	 ;Вывод точки	на экран.
    150	    00BC  FF 06	001Br			 inc Angl	 ;Приращение угла.
    151	    00C0  E2 D6				 loop do ;Повторить цикл, пока	CX не	0.
    152	    00C2  E8 FF78			 call Simv	 ;вызов процедуры	Simv
    153	    00C5  E8 FF94			 call pixel
    154	    00C8  E8 FFA2			 call WaitKey	 ;вызов процедуры	WaitKey
    155
    156	    00CB  B8 4C00			 mov AX, 4C00h	 ;Выход в
    157	    00CE  CD 21				 int 21h ;DOS.
    158	    00D0			 Main ENDP	 ;конец процедуры	Main
    159					 END Main	 ;конец Main
