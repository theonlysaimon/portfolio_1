TITLE ELOCHKA
.MODEL SMALL
.STACK 256
.DATA
stroka_1 DB 'h','a','p','p','y'
stroka_2 DB 'n','e','w'
stroka_3 DB 'y','e','a','r'
.CODE 		
Start:

mov AX, @Data 	;Инициализировать
mov DS, AX 		;сегментный регистр DS
xor ax, ax

mov ah, 00h 	;выбор функции задания режима экрана
mov al, 1h		;режим видеоадаптера 40х25, 16 цветов

;создание области

mov ah, 06h 	;Функция прокрутки вверх
mov al, 00h 	;Очистка всего экрана
mov bh, 07h		;атрибут для очищяемых строк
mov cl, 0		;координата х
mov ch, 0		;координата у
mov dl, 79		;ширина окна
mov dh, 24		;длина окна
int 10h			;вызов функции BIOS

mov ah, 05h		;установка активной видеостраницы
mov al, 01h		;номер видеостраницы
int 10h			;вызов функции BIOS

;отрисовка рамки

mov ah, 09h		;функция вывода символа
mov bh, 01h		;страница 1
mov al, 07h		;символ точка
mov bl, 0fh		;ярко белый по черному
mov cx, 028h	;40 символов
int 10h			;вызов функции BIOS

mov bh, 01h 	;Используем страницу видеопамяти 0.
mov dl, 0 		;Координаты начальной точки Х=0,
mov DH, 0 		; Y = 0.

met1: 
mov AH, 02h 	;Выбираем функцию установки курсора.
int 10h 		;Установка курсора.

mov CX, 1 		;Выводим по одному символу
mov AL, 7h 		;символ точки 
mov BL, 0fh		;Атрибут: ярко белый по черному фону.
mov AH, 09h 	;Выбираем функцию вывода символа и 
				;атрибута в позицию курсора.
int 10h 		;Вывод символа.

inc DH 			;Переход к координате Y+1.
cmp DH, 15 		;Сравнение с нижней позицией.
jb met1 		;Если ниже, повторить цикл вывода символа.

mov ah, 09h		;функция вывода символа
mov bh, 01h		;страница 1
mov al, 07h		;символ точка
mov bl, 0fh		;ярко белый по черному
mov cx, 028h	;40 символов
int 10h			;вызов функции BIOS

xor dx, dx

mov ah, 02h 	;Выбираем функцию установки курсора.
mov bh, 01h		;страница 1
mov dh, 0		;позиция по Y
mov dl, 39		;позиция по X
int 10h 		;Установка курсора.

met2: 
mov AH, 02h 	;Выбираем функцию установки курсора.
int 10h 		;Установка курсора.

mov CX, 1 		;Выводим по одному символу
mov AL, 7h 		;символ точки 
mov BL, 0fh		;Атрибут: ярко белый по черному фону.
mov AH, 09h 	;Выбираем функцию вывода символа и 
				;атрибута в позицию курсора.
int 10h 		;Вывод символа.

inc DH 			;Переход к координате Y+1.
cmp DH, 15 		;Сравнение с нижней позицией.
jb met2 		;Если ниже, повторить цикл вывода символа.


;отрисовка ёлки

mov ah, 02h 	;Выбираем функцию установки курсора.
mov bh, 01h		;страница 1
mov dh, 6		;позиция по Y
mov dl, 19		;позиция по X
int 10h 		;Установка курсора.
mov ah, 09h		;отрисовка звезды
mov al, 0Fh		;код символа
mov bl, 04h		;атрибут цвета
mov cx, 1		;количество символов 1
int 10h			;прерывание 

;-----------------------------ёлка-тело---------------------------------

mov ah, 02h 	;Выбираем функцию установки курсора.
mov bh, 01h		;страница 1
mov dh, 7		;позиция по Y
mov dl, 18		;позиция по X
int 10h 		;Установка курсора.
mov ah, 09h		;отрисовка тела
mov al, 2Ah		;код символа
mov bl, 02h		;цвет
mov cx, 3		;количество символов 3
int 10h			;прерывание 

mov ah, 02h 	;Выбираем функцию установки курсора.
mov bh, 01h		;страница 1
mov dh, 8		;позиция по Y
mov dl, 17		;позиция по X
int 10h 		;Установка курсора.
mov ah, 09h		;отрисовка тела
mov al, 2Ah		;код символа
mov bl, 02h		;цвет
mov cx, 5		;количество символов 5
int 10h			;прерывание

mov ah, 02h 	;Выбираем функцию установки курсора.
mov bh, 01h		;страница 1
mov dh, 9		;позиция по Y
mov dl, 16		;позиция по X
int 10h 		;Установка курсора.
mov ah, 09h		;отрисовка тела
mov al, 2Ah		;код символа
mov bl, 02h	;цвет
mov cx, 7		;количество символов 3
int 10h			;прерывание
;--------------------------------------------------------------------------
mov ah, 02h 	;Выбираем функцию установки курсора.
mov bh, 01h		;страница 1
mov dh, 10		;позиция по Y
mov dl, 19		;позиция по X
int 10h 		;Установка курсора.
mov ah, 09h		;отрисовка тела
mov al, 2Ah		;код символа
mov bl, 06h		;цвет коричневый
mov cx, 1		;количество символов 1
int 10h			;прерывание

xor dx, dx

;отрисовка ёлки - 2 

mov ah, 02h 	;Выбираем функцию установки курсора.
mov bh, 01h		;страница 1
mov dh, 9		;позиция по Y
mov dl, 34		;позиция по X
int 10h 		;Установка курсора.
mov ah, 09h		;отрисовка звезды
mov al, 0Fh		;код символа
mov bl, 04h		;атрибут цвета
mov cx, 1		;количество символов 1
int 10h			;прерывание 

;-----------------------------ёлка-тело-2--------------------------------

mov ah, 02h 	;Выбираем функцию установки курсора.
mov bh, 01h		;страница 1
mov dh, 10		;позиция по Y
mov dl, 31		;позиция по X
int 10h 		;Установка курсора.
mov ah, 09h		;отрисовка тела
mov al, 2Ah		;код символа
mov bl, 02h		;цвет
mov cx, 7		;количество символов 7
int 10h			;прерывание 

mov ah, 02h 	;Выбираем функцию установки курсора.
mov bh, 01h		;страница 1
mov dh, 11		;позиция по Y
mov dl, 32		;позиция по X
int 10h 		;Установка курсора.
mov ah, 09h		;отрисовка тела
mov al, 2Ah		;код символа
mov bl, 02h		;цвет
mov cx, 5		;количество символов 5
int 10h			;прерывание

mov ah, 02h 	;Выбираем функцию установки курсора.
mov bh, 01h		;страница 1
mov dh, 12		;позиция по Y
mov dl, 33		;позиция по X
int 10h 		;Установка курсора.
mov ah, 09h		;отрисовка тела
mov al, 2Ah		;код символа
mov bl, 02h		;цвет
mov cx, 3		;количество символов 3
int 10h			;прерывание

;---------------------------------пенёк-2----------------------------------------

mov ah, 02h 	;Выбираем функцию установки курсора.
mov bh, 01h		;страница 1
mov dh, 13		;позиция по Y
mov dl, 34		;позиция по X
int 10h 		;Установка курсора.
mov ah, 09h		;отрисовка звезды
mov al, 0Fh		;код символа
mov bl, 10000100b		;цвет коричневый
mov cx, 1		;количество символов 1
int 10h			;прерывание 

xor dx, dx

mov ah, 02h 	;Выбираем функцию установки курсора.
mov bh, 01h		;страница 1
mov dh, 0		;позиция по Y
mov dl, 39		;позиция по X
int 10h 		;Установка курсора.

;поздравительная надпись

mov ax, SEG stroka_1
mov es, ax
mov ah, 13h
mov al, 0
mov bh, 01h
mov cx, 5
mov bl, 00011110b
mov dl, 50;x
mov dh, 4;y
mov bp, offset stroka_1
int 10h

mov ax, SEG stroka_2
mov es, ax
mov ah, 13h
mov al, 0
mov bh, 01h
mov cx, 3
mov bl, 00011010b
mov dl, 50;x
mov dh, 5;y
mov bp, offset stroka_1+5
int 10h

mov ax, SEG stroka_3
mov es, ax
mov ah, 13h
mov al, 0
mov bh, 01h
mov cx, 4
mov bl, 0011010b
mov dl, 50;x
mov dh, 6;y
mov bp, offset stroka_1+8
int 10h

End Start