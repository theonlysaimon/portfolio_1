Turbo Assembler	 Version 2.51	     04/13/22 16:46:16	    Page 1
polinom2.ASM
POLINOM


      1					 ;Программа вычисления и построения графика	    +
      2					 функции	вида
      3					 ; Y=a1Xn + a2Xn-1 + …+ anX +an+1
      4	    0000			 .MODEL	SMALL ;Модель памяти ближнего типа.
      5	    0000			 .STACK	256 ;Отвести под стек 256	байт.
      6					 .486 ;Используем расширенную систему команд.
      7	    0000			 .DATA ;Открыть сегмент данных.
      8	    0000  FFFE 0008 FFFB 0000 +	 Mas_A DW -2, 8, -5, 0,	1 ;Коэффициенты полинома.
      9		  0001
     10	    000A  0004			 N DW 4	;Порядок	полинома равен 4.
     11	    000C  C1200000		 X DD -10.0 ;Начальное	значение аргумента X.
     12	    0010  00B4			 M DW 180 ;Масштабный	коэффициент.
     13	    0012  3DCCCCCD		 Step DD 0.1 ;Шаг изменения	аргумента X.
     14	    0016  0000			 Number	DW 0 ;Номер отсчёта	для значений	X.
     15	    0018  00000000		 Y DD (?) ;Результат вычисления полинома.
     16					 ;--------------------------------------------------------
     17	    001C			 .CODE ;Открыть сегмент кодов.
     18					 ;========== Инициализация	графического режима =============
     19	    0000			 InitGraph PROC
     20	    0000  60			 pusha
     21	    0001  B4 00			 mov AH, 0 ;Установить режим экрана
     22	    0003  B0 13			 mov AL, 13h ;640x480
     23	    0005  CD 10			 int 10h ;средствами BIOS.
     24	    0007  61			 popa
     25	    0008  C3			 ret
     26	    0009			 InitGraph ENDP
     27					 ;============== Закрытие графического режима	==============
     28	    0009			 CloseGraph PROC
     29	    0009  B8 0003		 mov AX, 3 ;Установить текстовый
     30	    000C  CD 10			 int 10h ;режим 25x80 средствами	BIOS.
     31	    000E  C3			 ret
     32	    000F			 CloseGraph ENDP
     33					 ;================ Очистка экрана ========================
     34	    000F			 Clear PROC
     35	    000F  60			 pusha
     36	    0010  B9 FA00		 mov CX, 64000 ;Число пикселов экрана.
     37	    0013  B8 A000		 mov AX, 0A000h	;Адрес графической видеопамяти
     38	    0016  8E C0			 mov ES, AX ;в	ES.
     39	    0018  B0 14			 mov AL, 00010100b
     40	    001A  33 FF			 xor DI, DI
     41	    001C  FC			 cld
     42	    001D  F3> AA		 rep stosb
     43	    001F  61			 popa
     44	    0020  C3			 ret
     45	    0021			 Clear ENDP
     46					 ;=============== Ожидание нажатия клавиши ===============
     47	    0021			 WaitKey PROC
     48	    0021  60			 pusha
     49	    0022  B4 01			 mov AH, 01h
     50	    0024  CD 21			 int 21h
     51	    0026  61			 popa
     52	    0027  C3			 ret
     53	    0028			 WaitKey ENDP
     54					 ;================ Рисование осей ========================
     55	    0028			 Osi PROC
     56	    0028  60			 pusha
     57	    0029  B9 000A		 mov CX, 10 ;x горизонталь
Turbo Assembler	 Version 2.51	     04/13/22 16:46:16	    Page 2
polinom2.ASM
POLINOM


     58	    002C  BA 0064		 mov DX, 100 ;y
     59	    002F  B0 06			 mov AL, 00000110b ;Цвет оси желтый
     60	    0031  B4 0C			 o1: mov AH, 12	;Вывод точки.
     61	    0033  CD 10			 int 10h ;Вызов BIOS.
     62	    0035  41			 inc CX	;Построить
     63	    0036  81 F9	012C		 cmp CX, 300 ;300
     64	    003A  75 F5			 jne o1	;точек.
     65	    003C  B9 00A0		 mov CX, 160 ;x	вертикаль
     66	    003F  BA 0000		 mov DX, 0 ;y
     67	    0042  B0 06			 mov AL, 00000110b ;Цвет оси желтый.
     68	    0044  B4 0C			 o2: mov AH, 12	;Вывод точки
     69	    0046  CD 10			 int 10h
     70	    0048  42			 inc DX
     71	    0049  81 FA	00C8		 cmp DX, 200
     72	    004D  75 F5			 jne o2
     73	    004F  61			 popa
     74	    0050  C3			 ret
     75	    0051			 Osi ENDP
     76					 ;================ Вывод точки на экран ===================
     77	    0051			 PutPixel PROC
     78					 ;ecx, edx – координаты точки
     79	    0051  60			 pusha
     80	    0052  B0 02			 mov AL,0000010b ;Цвет пиксела - зелёный
     81	    0054  66| BA FFFFFF4C	 mov EDX, -180 ;Номер строки	y
     82	    005A  66| 2B 16 0018r	 sub EDX, Y ;вывода
     83	    005F  90			 nop ;задержка
     84	    0060  B9 0050		 mov CX, 80 ;Номер	столбца x
     85	    0063  03 0E	0016r		 add CX, Number	;вывода.
     86	    0067  90			 nop
     87	    0068  B4 0C			 mov AH,12 ;Вывести пиксел
     88	    006A  CD 10			 int 10h ;на экран
     89	    006C  90			 nop
     90	    006D  61			 popa
     91	    006E  C3			 ret
     92	    006F			 PutPixel ENDP
     93					 ;--------------------------------------------------------------
     94	    006F  B8 0000s		 Start:	mov AX,	@Data
     95	    0072  8E D8			 mov DS, AX
     96	    0074  E8 FF98		 call Clear ;очистка журнала
     97	    0077  E8 FF86		 call InitGraph	;инициализация графического режима
     98	    007A  E8 FFAB		 call Osi ;построение	осей графика
     99	    007D  E8 FFA1		 call WaitKey ;Ожидание	нажатия клавиши
    100	    0080  8B 0E	000Ar		 @2: mov CX, N ;Загрузить счетчик циклов.
    101	    0084  33 F6			 xor SI,SI ;если сравниваемые биты отличаются (не	    +
    102					 равны) =1
    103	    0086  9B DB	E3		 finit ;Инициализировать сопроцессор
    104	    0089  DF 84	0000r		 fild Mas_A[SI]	;Загрузка a1 в	вершину стека
    105	    008D  D9 06	000Cr		 fld X ;Загрузить X в	st(1).
    106	    0091  DE C9			 @1: fmul ;Перемножть	st(0):=(st(0))*(st(1)).
    107	    0093  46			 inc SI	;Перейти	к следующему
    108	    0094  46			 inc SI	;ai.
    109	    0095  DE 84	0000r		 fiadd Mas_A[SI] ;Добавить очередное ai к произведению.
    110	    0099  D9 06	000Cr		 fld X ;Загрузить X в	st(1).
    111	    009D  E2 F2			 loop @1 ;Перейти на метку, если CX не 0.
    112	    009F  D9 C9			 fxch st(1) ;Обменять st(0) и st(1).
    113	    00A1  DE 36	0010r		 fidiv M ;Разделить на масштабный коэффициент.
    114	    00A5  D9 FC			 frndint ;Округлить до целого.
Turbo Assembler	 Version 2.51	     04/13/22 16:46:16	    Page 3
polinom2.ASM
POLINOM


    115	    00A7  DB 1E	0018r		 fistp Y ;Переслать (st(0)) в	Y.
    116	    00AB  E8 FFA3		 call PutPixel ;Вывести полученное значение на график.
    117	    00AE  D8 06	0012r		 fadd Step ;Увеличить на шаг st(0):=(st(0))+0.1.
    118	    00B2  D9 1E	000Cr		 fstp X	;Сохранить st(0)+0.1 в память Z.
    119	    00B6  FF 06	0016r		 inc Number ;Перейти к следующему отсчету по	X.
    120	    00BA  81 3E	0016r 00C7	 cmp Number,199	;Повторить еще 199 раз.
    121	    00C0  75 BE			 jnz @2	;если не равно 0 то
    122	    00C2  E8 FF5C		 call WaitKey ;Ожидание	нажатия клавиши
    123	    00C5  E8 FF41		 call CloseGraph ;Закрыть графический	режим
    124	    00C8  B8 4C00		 mov AX, 4C00h ;и выйти
    125	    00CB  CD 21			 int 21h ;в DOS.
    126					 END Start
